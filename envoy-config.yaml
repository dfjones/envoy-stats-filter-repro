admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901}

dynamic_resources:
  ads_config:
    api_type: GRPC
    grpc_services:
      envoy_grpc:
        cluster_name: xds_cluster
  cds_config: { ads: {}}

stats_config:
  stats_matcher:
    inclusion_list:
      patterns:
        - regex: "cluster.*lb[_.]healthy[_.]panic"
        - regex: "cluster.*lb[_.]local[_.]cluster[_.]not[_.]ok"
        - regex: "cluster.*membership[_.]healthy"
        - regex: "cluster.*membership[_.]total"
        - regex: "cluster.*outlier[_.]detection[_.]ejections[_.]active"
        - regex: "cluster.*outlier[_.]detection[_.]ejections[_.]detected[_.]success[_.]rate"
        - regex: "cluster.*outlier[_.]detection[_.]ejections[_.]enforced[_.]success[_.]rate"
        - regex: "cluster.*outlier[_.]detection[_.]ejections[_.]overflow"
        - regex: "cluster.*retry[_.]upstream[_.]rq"
        - regex: "cluster.*upstream[_.]cx[_.]active"
        - regex: "cluster.*upstream[_.]cx[_.]connect[_.]fail"
        - regex: "cluster.*upstream[_.]cx[_.]connect[_.]timeout"
        - regex: "cluster.*upstream[_.]cx[_.]destroy[_.]with[_.]active[_.]rq"
        - regex: "cluster.*upstream[_.]cx[_.]none[_.]healthy"
        - regex: "cluster.*upstream[_.]cx[_.]overflow"
        - regex: "cluster.*upstream[_.]cx[_.]rx[_.]bytes[_.]buffered"
        - regex: "cluster.*upstream[_.]cx[_.]rx[_.]bytes[_.]total"
        - regex: "cluster.*upstream[_.]cx[_.]total"
        - regex: "cluster.*upstream[_.]cx[_.]tx[_.]bytes[_.]buffered"
        - regex: "cluster.*upstream[_.]cx[_.]tx[_.]bytes[_.]total"
        - regex: "cluster.*upstream[_.]rq"
        - regex: "cluster.*upstream[_.]rq[_.].*"
        - regex: "cluster.*upstream[_.]rq[_.]active"
        - regex: "cluster.*upstream[_.]rq[_.]retry[_.]overflow"
        - regex: "cluster.*upstream[_.]rq[_.]total"
        - regex: "cluster.*version"
        - regex: "control.*plane[_.]connected[_.]state"
        - regex: "http.*downstream[_.]cx[_.]active"
        - regex: "http.*downstream[_.]cx[_.]destroy[_.]remote[_.]active[_.]rq"
        - regex: "http.*downstream[_.]cx[_.]http1[_.]active"
        - regex: "http.*downstream[_.]cx[_.]http2[_.]active"
        - regex: "http.*downstream[_.]cx[_.]rx[_.]bytes[_.]total"
        - regex: "http.*downstream[_.]cx[_.]ssl[_.]active"
        - regex: "http.*downstream[_.]cx[_.]tx[_.]bytes[_.]total"
        - regex: "http.*downstream[_.]rq[_.]active"
        - regex: "http.*downstream[_.]rq[_.]http1[_.]total"
        - regex: "http.*downstream[_.]rq[_.]http2[_.]total"
        - regex: "http.*downstream[_.]rq[_.]total"
        - regex: "http.*no[_.]cluster"
        - regex: "listener.*downstream[_.]cx[_.]active"
        - regex: "listener.*downstream[_.]cx[_.]total"
        - regex: "tcp.*downstream[_.]cx[_.]no[_.]route"
        - regex: "tcp.*downstream[_.]cx[_.]rx[_.]bytes[_.]buffered"
        - regex: "tcp.*downstream[_.]cx[_.]rx[_.]bytes[_.]total"
        - regex: "tcp.*downstream[_.]cx[_.]total"
        - regex: "tcp.*downstream[_.]cx[_.]tx[_.]bytes[_.]buffered"
        - regex: "tcp.*downstream[_.]cx[_.]tx[_.]bytes[_.]total"
        - regex: "tcp.*idle[_.]timeout"
        - regex: "tcp.*upstream[_.]flush[_.]active"
        - regex: "server.*"


static_resources:
  listeners:
  - name: egress
    address:
      socket_address: { address: 0.0.0.0, port_value: 9002 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: egress_http
          codec_type: AUTO
          rds:
            route_config_name: egress_route
            config_source:
              ads: {}

  clusters:
  - name: xds_cluster
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    hosts: [{ socket_address: { address: "control-plane", port_value: 10000}}]
